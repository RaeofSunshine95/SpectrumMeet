@model SpectrumMeetEF.Child

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Child</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ChildID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Verbal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Verbal)
                    @Html.ValidationMessageFor(model => model.Verbal, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LevelID, "LevelID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LevelID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LevelID, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <strong>Conditions</strong><br />
            @*@Html.EditorFor(m => m.ChildConditions)*@
            @foreach (var condition in ViewBag.Conditions)
            {
                <input type="checkbox" id=@string.Format("Checkbox{0}", condition.ConditionID)
                       onchange="changeCondition(@condition.ConditionID)" checked=@condition.IsSelected />
                <label for=@string.Format("Checkbox{0}", condition.ConditionID)>@condition.Name</label>
                <br/>
            }
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div id="ConditionResponse" ></div>
<div>
    @Html.ActionLink("Back to List", "Details", new { id = Model.ChildID })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        function changeCondition(id) {
            var childId = document.getElementById("ChildID").value;
            var checkbox = document.getElementById('Checkbox' + id);
            var checked = checkbox.checked;
            parm = childId + '|' + id + '|' + checked;
            var container = $('#ConditionResponse');
            container.load('@Url.Action("_ChildConditionChange")?parm=' + parm);

        }
    </script>
}